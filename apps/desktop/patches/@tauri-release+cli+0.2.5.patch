diff --git a/node_modules/@tauri-release/cli/dist/updater.cjs b/node_modules/@tauri-release/cli/dist/updater.cjs
index 8bc9ce9..51fd654 100644
--- a/node_modules/@tauri-release/cli/dist/updater.cjs
+++ b/node_modules/@tauri-release/cli/dist/updater.cjs
@@ -90,14 +90,17 @@ async function updater() {
       }
     });
   };
-  const promises = latestRelease.assets.map(async (asset) => {
-    await setAsset(asset, /.msi.zip/, ["win64", "windows-x86_64"]);
+
+  const assets = latestRelease.assets.filter(a => !a.name.includes('offline_installer'));
+
+  const promises = assets.map(async (asset) => {
+    await setAsset(asset, /.msi/, ["win64", "windows-x86_64"]);
     await setAsset(asset, /.app.tar.gz/, [
       "darwin",
       "darwin-x86_64",
       "darwin-aarch64"
     ]);
-    await setAsset(asset, /.AppImage.tar.gz/, ["linux", "linux-x86_64"]);
+    await setAsset(asset, /.AppImage/, ["linux", "linux-x86_64"]);
   });
   await Promise.allSettled(promises);
   fs.writeFileSync(filename, JSON.stringify(updateData, null, 2));
diff --git a/node_modules/@tauri-release/cli/dist/updater.mjs b/node_modules/@tauri-release/cli/dist/updater.mjs
index 883f7fa..d5d3db1 100644
--- a/node_modules/@tauri-release/cli/dist/updater.mjs
+++ b/node_modules/@tauri-release/cli/dist/updater.mjs
@@ -1,10 +1,10 @@
+import { context, getOctokit } from '@actions/github';
 import fs from 'fs';
-import path from 'path';
+import 'module';
 import fetch from 'node-fetch';
-import { context, getOctokit } from '@actions/github';
-import { $ as $argv, a as $, R as ROOT_PATH, r as relativePath, d as UPDATER_JSON_PATH } from './shared/cli.8f57657e.mjs';
+import path from 'path';
+import { a as $, $ as $argv, r as relativePath, R as ROOT_PATH, d as UPDATER_JSON_PATH } from './shared/cli.8f57657e.mjs';
 import updatelog from './updatelog.mjs';
-import 'module';
 
 async function updater() {
   const argv = $argv();
@@ -88,14 +88,17 @@ async function updater() {
       }
     });
   };
-  const promises = latestRelease.assets.map(async (asset) => {
-    await setAsset(asset, /.msi.zip/, ["win64", "windows-x86_64"]);
+
+  const assets = latestRelease.assets.filter(a => !a.name.includes('offline_installer'));
+
+  const promises = assets.map(async (asset) => {
+    await setAsset(asset, /.msi/, ["win64", "windows-x86_64"]);
     await setAsset(asset, /.app.tar.gz/, [
       "darwin",
       "darwin-x86_64",
       "darwin-aarch64"
     ]);
-    await setAsset(asset, /.AppImage.tar.gz/, ["linux", "linux-x86_64"]);
+    await setAsset(asset, /.AppImage/, ["linux", "linux-x86_64"]);
   });
   await Promise.allSettled(promises);
   fs.writeFileSync(filename, JSON.stringify(updateData, null, 2));
